using System;using System.Collections.Generic;using System.IO;using System.Linq;using System.Text;using System.Threading.Tasks;namespace Grades{    class Program    {        static void Main(string[] args)        {            GradeBook book = new ThrowAwayGradeBook();            GetBookName(book);            AddGrades(book);            // Console.Out let's us specify where we want to write the grades to (console or some file for example)            // StreamWriter and TextWriter are compatible with each other            // File comes from System.IO            SaveGrades(book);            // need to close the outputFile because of buffering issues that may cause the information to not successfully arrive at endpoint            // outputFile.Close();            // typically you want this whole write to outputFile to happen in a using clause            WriteResults(book);        }        public static void WriteResults(GradeBook book)        {            GradeStatistics stats = book.ComputeStatistics();            WriteResult("Average", stats.AverageGrade);            // C# type cast (int) to change to int value            WriteResult("Highest", stats.HighestGrade);            WriteResult("Lowest", stats.LowestGrade);            WriteResult(stats.Description, stats.LetterGrade);        }        public static void SaveGrades(GradeBook book)        {            using (StreamWriter outputFile = File.CreateText("grades.txt"))            {                book.WriteGrades(outputFile);                // dont need to explicitly say outputFile.close() because if there is an exception the program will close safely            }        }        public static void AddGrades(GradeBook book)        {            book.AddGrade(91);            book.AddGrade(75);            book.AddGrade(89.5f);        }        public static void GetBookName(GradeBook book)        {            try            {                Console.WriteLine("Enter a name");                book.Name = Console.ReadLine();            }            catch (ArgumentException ex)            {                Console.WriteLine(ex.Message);            }        }        static void WriteResult(string description, string result)        {            // cw using formatting string where 0 is the first arg passed in and 1 is the second arg given            // Console.WriteLine("{0}: {1}", description, result);            Console.WriteLine($"{description}: {result}");        }        static void WriteResult(string description, float result)        {            // cw using formatting string where 0 is the first arg passed in and 1 is the second arg given            // Console.WriteLine("{0}: {1}", description, result);            Console.WriteLine($"{description}: {result:F2}");        }    }}